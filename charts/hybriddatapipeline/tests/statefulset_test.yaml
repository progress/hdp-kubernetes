# tests/unittest_statefulset.yaml
suite: Test StatefulSet
templates:
  - statefulset.yaml

tests:
  - it: should render the statefulset with the correct release name and service name
    set:
      hdp.services.hdpService.name: "hdp-service"
      hdp.eula.accepted: "true"
      hdp.replicaCount: 3
      hdp.updateStrategy.type: "RollingUpdate"
      hdp.image.repository: "my-repo"
      hdp.image.tag: "latest"
      hdp.image.pullPolicy: "IfNotPresent"
      hdp.configurationFileName: "config.properties"
      haproxy.tls.enabled: false
      hdp.ports.hdpServer.port: 8080
      hdp.ports.opAccessor.port: 8081
      hdp.ports.notificationServer.port: 8082
      hdp.persistence.mountPath: "/data"
      hdp.livenessProbe.enabled: true
      hdp.livenessProbe.initialDelaySeconds: 30
      hdp.livenessProbe.periodSeconds: 10
      hdp.livenessProbe.timeoutSeconds: 5
      hdp.livenessProbe.failureThreshold: 3
      hdp.livenessProbe.successThreshold: 1
      hdp.readinessProbe.enabled: true
      hdp.readinessProbe.initialDelaySeconds: 30
      hdp.readinessProbe.periodSeconds: 10
      hdp.readinessProbe.timeoutSeconds: 5
      hdp.readinessProbe.failureThreshold: 3
      hdp.readinessProbe.successThreshold: 1
      hdp.resources.requests.memory: "256Mi"
      hdp.resources.requests.cpu: "250m"
      hdp.resources.limits.memory: "512Mi"
      hdp.resources.limits.cpu: "500m"
      imagePullSecrets: []
    asserts:
      - isKind:
          of: StatefulSet
      - equal:
          path: metadata.name
          value: "RELEASE-NAME-hdp-service"
      - equal:
          path: spec.replicas
          value: 3
      - equal:
          path: spec.updateStrategy.type
          value: "RollingUpdate"
      - equal:
          path: spec.template.spec.containers[0].image
          value: "my-repo:latest"
      - equal:
          path: spec.template.spec.containers[0].imagePullPolicy
          value: "IfNotPresent"
      - equal:
          path: spec.template.spec.containers[0].ports[0].containerPort
          value: 8080
      - equal:
          path: spec.template.spec.containers[0].ports[1].containerPort
          value: 8081
      - equal:
          path: spec.template.spec.containers[0].ports[2].containerPort
          value: 8082
      - equal:
          path: spec.template.spec.containers[0].volumeMounts[4].mountPath
          value: "/hdpshare"
      - equal:
          path: spec.template.spec.containers[0].livenessProbe.httpGet.port
          value: 8080
      - equal:
          path: spec.template.spec.containers[0].livenessProbe.initialDelaySeconds
          value: 30
      - equal:
          path: spec.template.spec.containers[0].livenessProbe.periodSeconds
          value: 10
      - equal:
          path: spec.template.spec.containers[0].livenessProbe.timeoutSeconds
          value: 5
      - equal:
          path: spec.template.spec.containers[0].livenessProbe.failureThreshold
          value: 3
      - equal:
          path: spec.template.spec.containers[0].livenessProbe.successThreshold
          value: 1
      - equal:
          path: spec.template.spec.containers[0].readinessProbe.httpGet.port
          value: 8080
      - equal:
          path: spec.template.spec.containers[0].readinessProbe.initialDelaySeconds
          value: 30
      - equal:
          path: spec.template.spec.containers[0].readinessProbe.periodSeconds
          value: 10
      - equal:
          path: spec.template.spec.containers[0].readinessProbe.timeoutSeconds
          value: 5
      - equal:
          path: spec.template.spec.containers[0].readinessProbe.failureThreshold
          value: 3
      - equal:
          path: spec.template.spec.containers[0].readinessProbe.successThreshold
          value: 1
      - equal:
          path: spec.template.spec.containers[0].resources.requests.memory
          value: "256Mi"
      - equal:
          path: spec.template.spec.containers[0].resources.requests.cpu
          value: "250m"
      - equal:
          path: spec.template.spec.containers[0].resources.limits.memory
          value: "512Mi"
      - equal:
          path: spec.template.spec.containers[0].resources.limits.cpu
          value: "500m"
      - equal:
          path: spec.template.spec.volumes[5].projected.sources[0].configMap.name
          value: "RELEASE-NAME-configmap"
      - equal:
          path: spec.template.spec.volumes[5].projected.sources[1].configMap.name
          value: "RELEASE-NAME-logging-properties-configmap"
