{{- if .Values.hdp.onPremiseConnector.enabled }}

---
apiVersion: v1
kind: Service
metadata:
  annotations:
    {{- if .Values.hdpingressconfiguration.haproxy.enabled }}
    haproxy.org/check: "{{ .Values.hdp.services.notificationService.check }}"
    haproxy.org/check-http: HEAD {{ .Values.hdp.services.notificationService.checkPath }}
    haproxy.org/check-interval: {{ .Values.hdp.services.notificationService.checkInterval }}
    haproxy.org/route-acl: path_end -i {{ .Values.hdp.services.notificationService.aclPath }}
    {{- else if .Values.hdpingressconfiguration.agic.enabled }}
    appgw.ingress.kubernetes.io/probe-path: "{{ .Values.hdp.services.notificationService.check }}"
    appgw.ingress.kubernetes.io/probe-protocol: HEAD {{ .Values.hdp.services.notificationService.checkPath }}
    appgw.ingress.kubernetes.io/probe-interval: {{ .Values.hdp.services.notificationService.checkInterval }}
    appgw.ingress.kubernetes.io/request-routing-rules: "PathBasedRouting"
    appgw.ingress.kubernetes.io/backend-path-prefix: {{ .Values.hdp.services.notificationService.aclPath }}
    {{- end }}
  name: {{ .Release.Name }}-{{ .Values.hdp.services.notificationService.name }}
  namespace: {{ .Release.Namespace }}
spec:
  {{- if eq .Values.hdpingressconfiguration.clusterType "cloud" }}
  type: ClusterIP
  {{ else }}
  type: NodePort
  {{- end }}
  ports:
  - name: notificationserver-port
    port: {{ .Values.hdp.ports.notificationServer.port }}
    protocol: TCP
    targetPort: {{ .Values.hdp.ports.notificationServer.targetPort }}
  selector:
    app: hdp-server-app
{{- end }}
