{{- $global := . }}
{{- $replicas:= int .Values.hdp.replicaCount }}

apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  annotations:
    {{- if .Values.haproxy.kubernetesIngress.enabled }}
    haproxy.org/forwarded-for: "true"
    haproxy.org/load-balance: roundrobin
    haproxy.org/timeout-check: 5m
    haproxy.org/timeout-server: 5m
    {{- end }}
    kubernetes.io/ingress.class: {{ .Values.kubernetesingress.controller.ingressClass }}
  name: {{ .Release.Name }}-{{ .Values.haproxy.kubernetesIngress.ingressName }}
  namespace: {{ .Release.Namespace }}
spec:
  ingressClassName: {{ .Values.kubernetesingress.controller.ingressClass }}
  rules:
  - host: {{ .Values.hdp.loadbalancer.hostName }}
    http:
      paths:
      - backend:
          service:
            name: {{ .Release.Name }}-{{ .Values.hdp.services.hdpService.name }}
            port:
              number: {{ .Values.hdp.ports.hdpServer.port }}
        path: /
        pathType: Prefix
        {{- if .Values.hdp.onPremiseConnector.enabled }}
      - backend:
          service:
            name: {{ .Release.Name }}-{{ .Values.hdp.services.notificationService.name }}
            port:
              number: {{ .Values.hdp.ports.notificationServer.port }}
        path: {{ .Values.hdp.services.notificationService.aclPath }}
        pathType: Prefix
        {{- range $ordinal := until $replicas }}
        {{ $opaPath := (printf "%s-%s-%d" $global.Release.Name $global.Values.hdp.services.hdpService.name $ordinal) }}
      - backend:
          service:
            name: {{ $global.Release.Name }}-{{ $global.Values.hdp.services.opAccessorService.name }}-{{ $ordinal }}
            port:
              number: {{ $global.Values.hdp.ports.opAccessor.port }}
        path: {{ $global.Values.hdp.services.opAccessorService.aclPath }}_{{ $opaPath }}
        pathType: Prefix
        {{- end }}
        {{- end }}
  {{- if .Values.haproxy.tls.enabled }}
  tls:
  - hosts:
    - {{ .Values.hdp.loadbalancer.hostName }}
    secretName: tls-cert
  {{- end }}
